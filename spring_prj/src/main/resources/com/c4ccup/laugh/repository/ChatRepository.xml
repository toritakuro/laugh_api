<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.c4ccup.laugh.repository.ChatRepository">

  <resultMap id="ChatListMap" type="com.c4ccup.laugh.domain.Chat">
    <id column="id" property="chatRoomId" />
    <id column="chat_id" property="chatId" />
    <result column="send_user_id" property="sendUserId"/>
    <result column="chat_message" property="chatMessage"/>
    <result column="unread_count" property="unreadCount"/>
    <result column="create_at" property="createAt"/>
    <!-- Javaの変数名を設定 -->
    <association property="comedian" resultMap="ComedianResultMap"/>
    <association property="composer" resultMap="ComposerResultMap"/>
  </resultMap>
  <resultMap id="ComedianResultMap" type="com.c4ccup.laugh.domain.User">
    <result column="user_comedian_id" property="id"/>
    <result column="comedian_name" property="userName"/>
  </resultMap>
  <resultMap id="ComposerResultMap" type="com.c4ccup.laugh.domain.User">
    <result column="user_composer_id" property="id"/>
    <result column="composer_name" property="userName"/>
  </resultMap>

  <!-- チャット一覧を取得する -->
  <select id="findChatList" resultMap="ChatListMap">
    SELECT
        crl.id,
        cd.id AS chat_id,
        crl.user_comedian_id,
        crl.user_composer_id,
    	cd.send_user_id,
        cd.chat_message,
        comedian.user_name AS comedian_name,
        composer.user_name AS composer_name,
        cd.create_at,
        COALESCE(um.unread_messages_count, 0) AS unread_count
    FROM
    	chat_detail cd
    INNER JOIN (
    	SELECT
    		max(id) as id
    	FROM
    		chat_detail
    	GROUP BY chat_room_list_id) as _cd on
    	  _cd.id = cd.id
    INNER JOIN chat_room_list crl
    	ON crl.id = cd.chat_room_list_id
    INNER JOIN user AS comedian
    	ON comedian.id = crl.user_comedian_id
    INNER JOIN user AS composer
    	ON composer.id = crl.user_composer_id
    LEFT JOIN (
        SELECT
          chat_room_list_id,
          COUNT(*) AS unread_messages_count
        FROM
          chat_detail
        WHERE
        <if test="userComedianId != null">
            send_user_id != #{userComedianId}
        </if>
        <if test="userComposerId != null">
            send_user_id != #{userComposerId}
        </if>
        AND
          readed_flg = 0
        GROUP BY chat_room_list_id) as um on
          um.chat_room_list_id = crl.id
    WHERE
    <if test="userComedianId != null">
        user_comedian_id = #{userComedianId}
    </if>
    <if test="userComposerId != null">
        user_composer_id = #{userComposerId}
    </if>
    ORDER BY cd.create_at DESC
  </select>

  <!-- チャット詳細を取得する -->
  <select id="findChatDetail" resultMap="ChatListMap">
    SELECT
        crl.id,
        cd.id AS chat_id,
        crl.user_comedian_id,
        crl.user_composer_id,
    	cd.send_user_id,
        cd.chat_message,
        comedian.user_name AS comedian_name,
        composer.user_name AS composer_name,
        cd.create_at
    FROM
      chat_detail cd
    INNER JOIN chat_room_list crl ON crl.id = cd.chat_room_list_id
    INNER JOIN user AS comedian
    	on comedian.id = crl.user_comedian_id
    INNER JOIN user AS composer
    	ON composer.id = crl.user_composer_id
    WHERE
        crl.id = #{chatRoomId}
    ORDER BY cd.create_at ASC
  </select>

  <!-- チャットルーム作成 -->
  <insert id="createChatRoom" useGeneratedKeys="true" keyProperty="chatRoomId">
    INSERT INTO
      chat_room_list
        (
        user_comedian_id
        ,user_composer_id
        ,create_at
        ,update_at
        )
    VALUES
      (
      #{userComedianId}
      ,#{userComposerId}
      ,now()
      ,now()
      );
  </insert>

  <!-- チャット送信 -->
  <insert id="sendChat" >
    INSERT INTO
      chat_detail
        (
        chat_room_list_id
        ,send_user_id
        ,chat_message
        ,create_at
        ,update_at
        )
    VALUES
      (
      #{chatRoomId}
      ,#{sendUserId}
      ,#{chatMessage}
      ,now()
      ,now()
      );
  </insert>

  <!-- チャットルーム取得 -->
  <select id="findChatRoom" resultMap="ChatListMap">
    SELECT
      *
    FROM
      chat_room_list
    WHERE
      user_comedian_id = #{userComedianId}   
    AND
     user_composer_id = #{userComposerId};
  </select>

  <!-- チャットルーム削除 -->
  <delete id="deleteChatRoom">
    DELETE FROM
      chat_room_list
    WHERE
      id = #{id};
  </delete>

  <!-- チャットルーム削除 -->
  <delete id="deleteChatDetail">
    DELETE FROM
      chat_detail
    WHERE
      chat_room_list_id = #{id};
  </delete>
  
  <!-- メッセージ既読 -->
  <update id="readMessage">
    UPDATE
      chat_detail
    SET
      readed_flg = 1
    WHERE
      chat_room_list_id = #{chatRoomId}
      AND send_user_id != #{sendUserId}
  </update>
</mapper>