version: '3'

services:
  java:
    container_name: java
    build:
      context: .
      dockerfile: ./infra/docker/java/Dockerfile
    restart: always
    command: mvn spring-boot:run -Dspring-boot.run.jvmArguments="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"
    volumes:
      - type: bind
        source: ./spring_prj
        target: /opt/spring_prj
      - type: bind
        source: ./credentials/credentials
        target: /root/.aws/credentials
      - type: volume
        source: m2
        target: /root/.m2
        volume:
              nocopy: true
    working_dir: /opt/spring_prj
    ports:
      - 8080:8080
      - 5005:5005
    depends_on:
      - db
  db:
    container_name: db
    build:
      context: .
      dockerfile: ./infra/docker/mysql/Dockerfile
    ports:
      - target: 3306
        published: ${DB_PUBLISHED_PORT:-3306}
        protocol: tcp
        mode: host
    volumes:
      - type: bind
        source: ./data/docker-entrypoint-initdb.d
        target: /docker-entrypoint-initdb.d
      - type: bind
        source: ./infra/docker/mysql/my.cnf
        target: /etc/mysql/conf.d/my.cnf
      - type: volume
        source: mysql-local
        target: /var/lib/mysql

    environment:
      - MYSQL_DATABASE=${DB_DATABASE:-c4cup}
      - MYSQL_USER=${DB_USERNAME:-java}
      - MYSQL_PASSWORD=${DB_PASSWORD:-secret}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-secret}

volumes:
  m2:
    external: true
  mysql-local:
    name: mysql-local