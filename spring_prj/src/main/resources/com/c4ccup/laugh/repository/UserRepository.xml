<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.c4ccup.laugh.repository.UserRepository">

  <resultMap id="UserResultMap" type="com.c4ccup.laugh.domain.User">
    <id column="user_id" property="id" />
    <result column="id" property="id"/>
    <result column="mail_address" property="mail"/>
    <result column="user_name" property="userName"/>
    <result column="user_name_kana" property="userNameKana"/>
    <result column="user_type" property="userType"/>
    <result column="password" property="password"/>
    <result column="debut_dt" property="debutDt"/>
    <result column="gender" property="gender"/>
    <result column="self_introduction" property="selfIntroduction"/>
    <result column="profile_img_path" property="profileImgPath"/>
    <result column="delete_flg" property="deleteFlg"/>
    <result column="login_at" property="loginAt"/>
    <result column="create_at" property="createAt"/>
    <result column="update_at" property="updateAt"/>
    <result column="special_skill_ids" property="specialSkillIds"/>
    <result column="special_skill_names" property="specialSkillNames"/>
    <result column="another_skill_names" property="anotherSkillNames"/>
    <result column="comedy_style_ids" property="comedyStyleIds"/>
    <result column="comedy_style_names" property="comedyStyleNames"/>
    <association property="officeId" resultMap="OfficeResultMap"/>
    <association property="areaId" resultMap="AreaResultMap"/>
    <association property="composerProfile" resultMap="ComposerResultMap"/>
    <association property="comedianProfile" resultMap="ComedianResultMap"/>
  </resultMap>
    <resultMap id="OfficeResultMap" type="com.c4ccup.laugh.domain.Office">
	  <id column="office_id" property="id" />
	  <result column="office_name" property="officeName"/>
    </resultMap>
    <resultMap id="AreaResultMap" type="com.c4ccup.laugh.domain.Area">
	  <id column="area_id" property="id" />
	  <result column="area" property="areaName"/>
    </resultMap>
    <resultMap id="ComposerResultMap" type="com.c4ccup.laugh.domain.Composer">
	  <id column="id" property="id" />
	  <result column="user_id" property="userId"/>
	  <result column="fee_type" property="feeType"/>
	  <result column="fee" property="fee"/>
	  <result column="create_at" property="createAt"/>
	  <result column="update_at" property="updateAt"/>
	</resultMap>
	<resultMap id="ComedianResultMap" type="com.c4ccup.laugh.domain.Comedian">
	  <id column="id" property="id" />
	  <result column="user_id" property="userId"/>
	  <result column="member_num" property="memberNum"/>
	  <result column="create_at" property="createAt"/>
	  <result column="update_at" property="updateAt"/>
	</resultMap>
    <resultMap id="SpecialSkillResultMap" type="com.c4ccup.laugh.domain.SpecialSkill">
	  <id column="id" property="id" />
	  <result column="special_skill_name" property="specialSkillName"/>
    </resultMap>
    <resultMap id="OwnSpecialSkillResultMap" type="com.c4ccup.laugh.domain.OwnSpecialSkill">
	  <id column="own_special_skill_id" property="id" />
	  <result column="user_id" property="userId"/>
	  <result column="another_skill" property="anotherSkillName"/>
	  <result column="create_at" property="createAt"/>
	  <result column="update_at" property="updateAt"/>
	  <association property="specialSkillId" resultMap="SpecialSkillResultMap"/>
    </resultMap>

  <select id="findById" parameterType="int" resultMap="UserResultMap">
    SELECT
      *
    FROM
      user
    WHERE
      id = #{id}
  </select>

  <select id="findByMail" parameterType="String" resultMap="UserResultMap">
    SELECT
      *
    FROM
      user
    WHERE
      user_address = #{mail}
  </select>

  <insert id="register" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO
      user
        (
        user_address
        ,user_name
        ,user_name_kana
        ,user_type
        ,password
        ,debut_dt
        ,gender
        ,office_id
        ,area_id
        ,self_introduction
        ,profile_img_path
        )
    VALUES
      (
      #{userAddress}
      ,#{userName}
      ,#{userNameKana}
      ,#{userType}
      ,#{password}
      ,#{debutDt}
      ,#{gender}
      ,#{officeId}
      ,#{areaId}
      ,#{selfIntroduction}
      ,#{profileImgPath}
      );
  </insert>

  <insert id="registerComedian">
    INSERT INTO
      comedian_profile
        (
        user_id
        ,member_num
        )
    VALUES
      (
      #{userId}
      ,#{memberNum}
      );
  </insert>

  <insert id="registerComposer">
    INSERT INTO
      composer_profile
        (
        user_id
        ,fee_type
        ,fee
        )
    VALUES
      (
      #{userId}
      ,#{feeType}
      ,#{fee}
      );
  </insert>

  <select id="getMaxUserId" resultType="int">
    SELECT
      max(user.id)
    FROM
      user
      ;
  </select>

  <insert id="registerOwnComedyStyle">
    INSERT INTO
      own_comedy_style
        (
        comedy_style_id
        ,user_id
        )
    VALUES
      (
      #{comedyStyleId}
      ,#{userId}
      );
  </insert>

  <insert id="registerOwnSpecialSkill" parameterType="java.util.List">
    INSERT INTO
      own_special_skill
        (
        user_id
        ,special_skill_id
        ,another_skill
        )
    VALUES
    <foreach collection="userBeanList" item="user" separator=",">
      (
      #{user.userId}
      ,#{user.specialSkillId}
      ,#{user.anotherSkill}
      )
    </foreach>
  </insert>

  <select id="findByName" parameterType="String" resultMap="UserResultMap">
    SELECT
      *
    FROM
      user
    WHERE
      user_name LIKE CONCAT('%', #{name}, '%')
  </select>

  <update id="updateLoginAt" parameterType="com.c4ccup.laugh.domain.User">
    UPDATE user
    SET login_at = #{loginAt}
    WHERE id = #{id}
  </update>

   <select id="getComposerList" parameterType="int" resultMap="UserResultMap">
    SELECT
      user.id as user_id
      ,user.user_address
      ,user.user_name
      ,user.user_name_kana
      ,user.user_type
      ,user.debut_dt
      ,user.gender
      ,user.office_id
      ,user.area_id
      ,user.self_introduction
      ,user.profile_img_path
      ,user.login_at
      ,user.create_at
      ,user.update_at
      ,composer_profile.fee_type
      ,composer_profile.fee
      ,office.office_name
      ,area.area
      ,GROUP_CONCAT(DISTINCT special_skill.id order by special_skill.id ASC) as special_skill_ids
      ,GROUP_CONCAT(DISTINCT special_skill.special_skill_name order by special_skill.id ASC) as special_skill_names
      ,GROUP_CONCAT(DISTINCT own_special_skill.another_skill order by own_special_skill.special_skill_id ASC) as another_skill_names
      ,GROUP_CONCAT(DISTINCT comedy_style.id order by comedy_style.id ASC) as comedy_style_ids
      ,GROUP_CONCAT(DISTINCT comedy_style.style_name  order by comedy_style.id ASC) as comedy_style_names
    FROM
      user
    INNER JOIN
      composer_profile
    ON
      user.id = composer_profile.user_id
    LEFT JOIN
      office
    ON
      user.office_id = office.id
    LEFT JOIN
      area
    ON
      user.area_id = area.id
    LEFT JOIN
      own_special_skill
    ON
      user.id = own_special_skill.user_id
    LEFT JOIN
      special_skill
    ON
      special_skill.id = own_special_skill.special_skill_id
    LEFT JOIN
      own_comedy_style
    ON
      user.id = own_comedy_style.user_id
    LEFT JOIN
      comedy_style
    ON
      comedy_style.id = own_comedy_style.comedy_style_id
    WHERE
      user.user_type = #{userType}
    AND
      user.delete_flg = 0
    GROUP BY
      composer_profile.id
  </select>

  <select id="getComedianList" parameterType="int" resultMap="UserResultMap">
    SELECT
      user.id as user_id
      ,user.user_address
      ,user.user_name
      ,user.user_name_kana
      ,user.user_type
      ,user.debut_dt
      ,user.gender
      ,user.office_id
      ,user.area_id
      ,user.self_introduction
      ,user.profile_img_path
      ,user.login_at
      ,user.create_at
      ,user.update_at
      ,comedian_profile.member_num
      ,office.office_name
      ,area.area
      ,GROUP_CONCAT(DISTINCT special_skill.id order by special_skill.id ASC) as special_skill_ids
      ,GROUP_CONCAT(DISTINCT special_skill.special_skill_name order by special_skill.id ASC) as special_skill_names
      ,GROUP_CONCAT(DISTINCT own_special_skill.another_skill order by own_special_skill.special_skill_id ASC) as another_skill_names
      ,GROUP_CONCAT(DISTINCT comedy_style.id order by comedy_style.id ASC) as comedy_style_ids
      ,GROUP_CONCAT(DISTINCT comedy_style.style_name  order by comedy_style.id ASC) as comedy_style_names
    FROM
      user
    INNER JOIN
      comedian_profile
    ON
      user.id = comedian_profile.user_id
    LEFT JOIN
      office
    ON
      user.office_id = office.id
    LEFT JOIN
      area
    ON
      user.area_id = area.id
    LEFT JOIN
      own_special_skill
    ON
      user.id = own_special_skill.user_id
    LEFT JOIN
      special_skill
    ON
      special_skill.id = own_special_skill.special_skill_id
    LEFT JOIN
      own_comedy_style
    ON
      user.id = own_comedy_style.user_id
    LEFT JOIN
      comedy_style
    ON
      comedy_style.id = own_comedy_style.comedy_style_id
    WHERE
      user.user_type = #{userType}
    AND
      user.delete_flg = 0
    GROUP BY
      comedian_profile.id
  </select>

  <select id="getComposer" parameterType="int" resultMap="UserResultMap">
    SELECT
      user.id
      ,user.user_address
      ,user.user_name
      ,user.user_name_kana
      ,user.user_type
      ,user.debut_dt
      ,user.gender
      ,user.office_id
      ,user.area_id
      ,user.self_introduction
      ,user.profile_img_path
      ,user.login_at
      ,user.create_at
      ,user.update_at
      ,composer_profile.fee_type
      ,composer_profile.fee
      ,office.office_name
      ,area.area
      ,GROUP_CONCAT(DISTINCT special_skill.id order by special_skill.id ASC) as special_skill_ids
      ,GROUP_CONCAT(DISTINCT special_skill.special_skill_name order by special_skill.id ASC) as special_skill_names
      ,GROUP_CONCAT(DISTINCT own_special_skill.another_skill order by own_special_skill.special_skill_id ASC) as another_skill_names
      ,GROUP_CONCAT(DISTINCT comedy_style.id order by comedy_style.id ASC) as comedy_style_ids
      ,GROUP_CONCAT(DISTINCT comedy_style.style_name  order by comedy_style.id ASC) as comedy_style_names
    FROM
      user
    INNER JOIN
      composer_profile
    ON
      user.id = composer_profile.user_id
    LEFT JOIN
      office
    ON
      user.office_id = office.id
    LEFT JOIN
      area
    ON
      user.area_id = area.id
    LEFT JOIN
      own_special_skill
    ON
      user.id = own_special_skill.user_id
    LEFT JOIN
      special_skill
    ON
      special_skill.id = own_special_skill.special_skill_id
    LEFT JOIN
      own_comedy_style
    ON
      user.id = own_comedy_style.user_id
    LEFT JOIN
      comedy_style
    ON
      comedy_style.id = own_comedy_style.comedy_style_id
    WHERE
      user.id = #{id}
    AND
      user.delete_flg = 0
    GROUP BY
      composer_profile.id
  </select>

  <select id="getComedian" parameterType="int" resultMap="UserResultMap">
    SELECT
      user.id as user_id
      ,user.user_address
      ,user.user_name
      ,user.user_name_kana
      ,user.user_type
      ,user.debut_dt
      ,user.gender
      ,user.office_id
      ,user.area_id
      ,user.self_introduction
      ,user.profile_img_path
      ,user.login_at
      ,user.create_at
      ,user.update_at
      ,comedian_profile.member_num
      ,office.office_name
      ,area.area
      ,GROUP_CONCAT(DISTINCT special_skill.id order by special_skill.id ASC) as special_skill_ids
      ,GROUP_CONCAT(DISTINCT special_skill.special_skill_name order by special_skill.id ASC) as special_skill_names
      ,GROUP_CONCAT(DISTINCT own_special_skill.another_skill order by own_special_skill.special_skill_id ASC) as another_skill_names
      ,GROUP_CONCAT(DISTINCT comedy_style.id order by comedy_style.id ASC) as comedy_style_ids
      ,GROUP_CONCAT(DISTINCT comedy_style.style_name  order by comedy_style.id ASC) as comedy_style_names
    FROM
      user
    INNER JOIN
      comedian_profile
    ON
      user.id = comedian_profile.user_id
    LEFT JOIN
      office
    ON
      user.office_id = office.id
    LEFT JOIN
      area
    ON
      user.area_id = area.id
    LEFT JOIN
      own_special_skill
    ON
      user.id = own_special_skill.user_id
    LEFT JOIN
      special_skill
    ON
      special_skill.id = own_special_skill.special_skill_id
    LEFT JOIN
      own_comedy_style
    ON
      user.id = own_comedy_style.user_id
    LEFT JOIN
      comedy_style
    ON
      comedy_style.id = own_comedy_style.comedy_style_id
    WHERE
      user.user_type = #{userType}
    AND
      user.user_id = #{userId}
    GROUP BY
      comedian_profile.id
  </select>

  <update id="updateProfile">
    UPDATE
      user
    SET
      user_address = #{userAddress}
      ,user_name = #{userName}
      ,user_name_kana = #{userNameKana}
      ,user_type = #{userType}
      ,password = #{password}
      ,debut_dt = #{debutDt}
      ,gender = #{gender}
      ,office_id = #{officeId}
      ,area_id = #{areaId}
      ,self_introduction = #{selfIntroduction}
      ,profile_img_path = #{profileImgPath}
    WHERE
      id = #{id}
  </update>

  <update id="updateComedian">
    UPDATE
      comedian_profile
    SET
      member_num = #{memberNum}
    WHERE
      user_id = #{id}
  </update>

  <update id="updateComposer">
    UPDATE
      composer_profile
    SET
      fee_type = #{feeType}
      ,fee = #{fee}
    WHERE
      user_id = #{id}
  </update>

  <delete id="deleteOwnComedyStyle">
    DELETE FROM
      own_comedy_style
    WHERE
      user_id = #{userId}
  </delete>

  <delete id="deleteOwnSpecialSkill">
    DELETE FROM
      own_special_skill
    WHERE
      user_id = #{userId}
  </delete>
</mapper>